# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
# https://dev.to/n3wt0n/container-image-promotion-across-environments-yaml-1ca6

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.SourceVersion)'
  ImageName: 'hauki'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build the images
  jobs:  
  - job: Build
    displayName: Build
    steps:
    - script: |
          echo 'Running in workspace $(Pipeline.Workspace)'
          echo 'Build.SourceVersion: $(Build.SourceVersion)'
          echo 'Build.SourceVersionMessage: $(Build.SourceVersionMessage)'
          echo 'Build.SourcesDirectory: $(Build.SourcesDirectory)'
          echo 'Build.ArtifactStagingDirectory: $(build.artifactstagingdirectory)'
    - task: DockerCompose@0
      displayName: Build images
      inputs:
        dockerComposeCommand: build
        dockerComposeFile: '$(Build.SourcesDirectory)/docker-compose.yml'
        includeSourceTags: true
        includeLatestTag: true
    - task: Docker@2
      displayName: Save deployment image to TAR
      inputs:
        repository: '$(ImageName)'
        command: save
        arguments: '--output $(build.artifactstagingdirectory)/$(ImageName).image.tar $(ImageName):latest'
        addPipelineData: false
    - task: Docker@2
      displayName: Save dev/test image to TAR
      inputs:
        repository: '$(ImageName)_dev'
        command: save
        arguments: '--output $(build.artifactstagingdirectory)/$(ImageName)_dev.image.tar $(ImageName)_dev:latest'
        addPipelineData: false
    - publish: $(build.artifactstagingdirectory)
      artifact: ContainerImages
- stage: Test
  displayName: Test
  jobs:
  - job: Test
    displayName: Test the dev image
    steps:
      - task: DownloadPipelineArtifact@2
        displayName: Download images
        inputs:
          artifact: ContainerImages
      - task: Docker@2
        displayName: Load dev image from Tar
        inputs:
          command: load
          arguments: '--input $(Pipeline.Workspace)/$(ImageName)_dev.image.tar'
      - task: DockerCompose@0
        displayName: Run tests
        inputs:
          dockerComposeCommand: run dev test
          dockerComposeFile: '$(Build.SourcesDirectory)/docker-compose.yml'
- stage: Deploy
  displayName: Deploy
  jobs:
  - job: Deploy
    displayName: Deploy image
    steps:
      - task: DownloadPipelineArtifact@2
        displayName: Download images
        inputs:
          artifact: ContainerImages
      - task: Docker@2
        displayName: Load production image from Tar
        inputs:
          command: load
          arguments: '--input $(Pipeline.Workspace)/$(ImageName).image.tar'
      - task: Docker@2
        displayName: Name the image
        inputs:
          containerRegistry: Docker hub upload
          repository: $(ImageName)
          command: tag
          arguments: $(ImageName):latest helsinki/$(ImageName):latest
      # - task: Docker@2
      #   displayName: Name the image
      #   inputs:
      #     containerRegistry: Docker hub upload
      #     repository: $(ImageName)
      #     command: tag
      #     arguments: $(ImageName):$(tag) helsinki/$(ImageName):$(tag)
      - task: Docker@2
        displayName: Push image to Docker hub
        inputs:
          containerRegistry: Docker hub upload
          repository: helsinki/$(ImageName)
          command: push
          tags: |
            latest
            $(tag)
